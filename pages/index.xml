<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Pages on ayasuda.github.io</title><link>https://ayasuda.github.io/pages/</link><description>Recent content in Pages on ayasuda.github.io</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 24 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ayasuda.github.io/pages/index.xml" rel="self" type="application/rss+xml"/><item><title>ぼくのための Generics (Go 言語) 入門</title><link>https://ayasuda.github.io/pages/introduction_go_generics/</link><pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/introduction_go_generics/</guid><description>Genercis がなぜ欲しいのか？　とその基本的な構文について</description></item><item><title>Go 言語でのコマンドライン引数処理</title><link>https://ayasuda.github.io/pages/snippet_golang_flag/</link><pubDate>Sat, 23 Jul 2022 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/snippet_golang_flag/</guid><description>Go 言語でコマンドライン引数を受け取り、適宜処理する方法についてサンプルコードともにまとめました</description></item><item><title>コマンドライン引数ことはじめ</title><link>https://ayasuda.github.io/pages/what_is_command_line_argument/</link><pubDate>Sat, 23 Jul 2022 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/what_is_command_line_argument/</guid><description>コマンドライン引数は、プログラムの実行時に追加情報を与えるやり方の一つです。 と、言ってもわかりにくいですかね？ Unix や Linux といった OS では、コマンド</description></item><item><title>Go 言語でのシグナル処理</title><link>https://ayasuda.github.io/pages/snippet_golang_signal/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/snippet_golang_signal/</guid><description>Go 言語でシグナルを受け取り、適宜処理する方法についてサンプルコードともにまとめました</description></item><item><title>シグナル処理ことはじめ</title><link>https://ayasuda.github.io/pages/what_is_signal/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/what_is_signal/</guid><description>サーバプログラムなどを書くときに覚えておいたほうが良い、「シグナル処理」とは何かについて基礎知識を簡単にまとめました</description></item><item><title>去年は４日で挫折したけど、俺は AoC をただ解いていこうと思う。1 日目</title><link>https://ayasuda.github.io/pages/challenge_aoc2020_day01/</link><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/challenge_aoc2020_day01/</guid><description>ただただ Advent of Code 2020 を淡々とこなしていく記録</description></item><item><title>「パラサイト 半地下の家族」鑑賞記</title><link>https://ayasuda.github.io/pages/movie_review_parasite/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/movie_review_parasite/</guid><description>映画「パラサイト 半地下の家族」</description></item><item><title>2020年の至極個人的な目標。あと、やりたいこと、行きたいとこ、したいこと、読みたいもの</title><link>https://ayasuda.github.io/pages/goals_for_2020/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/goals_for_2020/</guid><description>とある一個人の個人的な今年の目標といわゆるバケツリスト</description></item><item><title>今年はどのアドベントカレンダーにも投稿しないから、俺は AoC をただ解いていこうと思う。4 日目</title><link>https://ayasuda.github.io/pages/challenge_aoc2019_day4/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/challenge_aoc2019_day4/</guid><description>ただただ Advent of Code 2019 を淡々とこなしていく記録の4日目</description></item><item><title>今年はどのアドベントカレンダーにも投稿しないから、俺は AoC をただ解いていこうと思う。3 日目</title><link>https://ayasuda.github.io/pages/challenge_aoc2019_day3/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/challenge_aoc2019_day3/</guid><description>ただただ Advent of Code 2019 を淡々とこなしていく記録の3日目</description></item><item><title>今年はどのアドベントカレンダーにも投稿しないから、俺は AoC をただ解いていこうと思う。2 日目</title><link>https://ayasuda.github.io/pages/challenge_aoc2019_day2/</link><pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/challenge_aoc2019_day2/</guid><description>ただただ Advent of Code 2019 を淡々とこなしていく記録</description></item><item><title>今年はどのアドベントカレンダーにも投稿しないから、俺は AoC をただ解いていこうと思う。1 日目</title><link>https://ayasuda.github.io/pages/challenge_aoc2019_day1/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/challenge_aoc2019_day1/</guid><description>ただただ Advent of Code 2019 を淡々とこなしていく記録</description></item><item><title>Golang time.Parse の使い方</title><link>https://ayasuda.github.io/pages/snippet_golang_time_parse/</link><pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/snippet_golang_time_parse/</guid><description>Go 言語で文字列を`Time` 構造体に変換する `time.Parse` の使い方をまとめました</description></item><item><title>コマンドラインツールでの設定値の優先順（設定ファイル・環境変数・コマンドライン引数）</title><link>https://ayasuda.github.io/pages/note_configuration_order_at_command_line/</link><pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/note_configuration_order_at_command_line/</guid><description>コマンドラインツールを作る時、プログラムがユーザから値を受ける方法は何通りもあります。特に代表的なのが設定ファイル・環境変数・コマンドライン引数です。本記事では、一般的にこれらをどのような優先順位で扱うかを調べていきます。</description></item><item><title>カレンダー作成問題の解答 Go言語編</title><link>https://ayasuda.github.io/pages/answer_calendar_go/</link><pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/answer_calendar_go/</guid><description>初心者向けプログラミング問題の１つである「カレンダー作成問題」の解答コードと作り方をメモしていきます。</description></item><item><title>Go 言語 context パッケージ誕生の背景と使用方法</title><link>https://ayasuda.github.io/pages/what_is_context_at_go/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/what_is_context_at_go/</guid><description>サーバプログラムやAPI呼び出しなどをする際によく見かけることになる context パッケージ。このパッケージが何を解決たかったのかと、使用法についてまとめてみます。</description></item><item><title>go doc の使い方・コメントを書いて、ちゃんと読む</title><link>https://ayasuda.github.io/pages/introduction_go_doc/</link><pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/introduction_go_doc/</guid><description>godoc コマンドを使ってドキュメントを読む方法についてまとめてみました</description></item><item><title>PlantUML をリアルタイムでプレビューしたい - それ、fswatch でできるよ。</title><link>https://ayasuda.github.io/pages/tipes_realtime_preview/</link><pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/tipes_realtime_preview/</guid><description>リアリタイムでプレビューをコマンドライン上だけで完結させるために、簡単なスクリプトを組んでみました。</description></item><item><title>ぼくのための Gradle 入門</title><link>https://ayasuda.github.io/pages/introduction_gradle/</link><pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/introduction_gradle/</guid><description>Gradle に入門しつつ、とりあえず Hello,World. と Java プログラムを書くまで</description></item><item><title>アート・オブ・ジョブホッピング・ayasuda エディション</title><link>https://ayasuda.github.io/pages/art_of_job_hopping_ayasuda_edition/</link><pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/art_of_job_hopping_ayasuda_edition/</guid><description>退職者アドベントカレンダー2017の14日目として自分語りポエムを書いてみました</description></item><item><title>俺のための Maven 入門</title><link>https://ayasuda.github.io/pages/introduction_maven/</link><pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/introduction_maven/</guid><description>初めて Maven に触れる人向けに、５分でわかる Maven の流れをまとめておきました</description></item><item><title>rails new するとできる bin ディレクトリまとめ</title><link>https://ayasuda.github.io/pages/rails_bin_directory/</link><pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/rails_bin_directory/</guid><description>rails new するとできる bin ディレクトリの役割と、それぞれの内容についてメモ程度にまとめてみました。</description></item><item><title>１ファイルくらいのスクリプト向け bundler</title><link>https://ayasuda.github.io/pages/bundler_inline/</link><pubDate>Fri, 20 Oct 2017 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/bundler_inline/</guid><description>bundler を使って簡単なスクリプトでも依存関係を定義できる、インライン記法についてメモをまとめておきました</description></item><item><title>ちょっとした計算をしたいならbcを使えばいいらしいよ</title><link>https://ayasuda.github.io/pages/introduction_bc/</link><pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/introduction_bc/</guid><description>ちょっとした計算をCLI上でやるなら bc コマンドが便利です。この記事では、最初の最初のさわりだけ、メモしてあります。</description></item><item><title>特定メソッドがどのように変更されてきたかを調べる</title><link>https://ayasuda.github.io/pages/git_blame/</link><pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/git_blame/</guid><description>git blame の便利な使い方</description></item><item><title>クリスマスはとっくに終わったけど、俺は AoC をただ解いていこうと思う。5 日目</title><link>https://ayasuda.github.io/pages/challenge_aoc2019_day5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/challenge_aoc2019_day5/</guid><description>ただただ Advent of Code 2019 を淡々とこなしていく記録の5日目</description></item><item><title>これはタイトルです</title><link>https://ayasuda.github.io/pages/introduction_yacc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/introduction_yacc/</guid><description>俺のための yacc 入門 いつか何もかも忘れる自分に向けて。 この文書では、yacc って何？ 美味しいの？ みたいなプログラマ、そうオレをターゲットに、 ステ</description></item><item><title>これはタイトルです</title><link>https://ayasuda.github.io/pages/what_is_spring_context/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/what_is_spring_context/</guid><description>Spring の Context を理解したいだけの１日だった。 いきなり Spring Boot から触り始めたゆとり世代の私は、 Context とかよくわからずにプログラムを書いているのでした。 一体なに</description></item><item><title>はじめての npm パッケージ</title><link>https://ayasuda.github.io/pages/making_node_module/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/making_node_module/</guid><description>UIコンポーネントのライブラリわかりやすくするために Storybook を使ってみようって記事</description></item><item><title>ぼくのための Storybook 入門</title><link>https://ayasuda.github.io/pages/introduction_storybook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/introduction_storybook/</guid><description>UIコンポーネントのライブラリわかりやすくするために Storybook を使ってみようって記事</description></item><item><title>俺のための Spring 入門かつ再整理</title><link>https://ayasuda.github.io/pages/introduction_spring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/introduction_spring/</guid><description>俺のための Spring 入門かつ再整理 Spring というフレームワーク 色々入ってる DI と AOP がきも・・・なんだよね？ アプリケーション コンポーネント 設定 インジェクション</description></item></channel></rss>