<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Go on ayasuda.github.io</title><link>https://ayasuda.github.io/tags/go/</link><description>Recent content in Go on ayasuda.github.io</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sat, 23 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ayasuda.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 言語でのコマンドライン引数処理</title><link>https://ayasuda.github.io/pages/snippet_golang_flag/</link><pubDate>Sat, 23 Jul 2022 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/snippet_golang_flag/</guid><description>Go 言語でコマンドライン引数を受け取り、適宜処理する方法についてサンプルコードともにまとめました</description></item><item><title>Go 言語でのシグナル処理</title><link>https://ayasuda.github.io/pages/snippet_golang_signal/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/snippet_golang_signal/</guid><description>Go 言語でシグナルを受け取り、適宜処理する方法についてサンプルコードともにまとめました</description></item><item><title>Golang time.Parse の使い方</title><link>https://ayasuda.github.io/pages/snippet_golang_time_parse/</link><pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/snippet_golang_time_parse/</guid><description>Go 言語で文字列を`Time` 構造体に変換する `time.Parse` の使い方をまとめました</description></item><item><title>カレンダー作成問題の解答 Go言語編</title><link>https://ayasuda.github.io/pages/answer_calendar_go/</link><pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/answer_calendar_go/</guid><description>初心者向けプログラミング問題の１つである「カレンダー作成問題」の解答コードと作り方をメモしていきます。</description></item><item><title>Go 言語 context パッケージ誕生の背景と使用方法</title><link>https://ayasuda.github.io/pages/what_is_context_at_go/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/what_is_context_at_go/</guid><description>サーバプログラムやAPI呼び出しなどをする際によく見かけることになる context パッケージ。このパッケージが何を解決たかったのかと、使用法についてまとめてみます。</description></item><item><title>go doc の使い方・コメントを書いて、ちゃんと読む</title><link>https://ayasuda.github.io/pages/introduction_go_doc/</link><pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate><guid>https://ayasuda.github.io/pages/introduction_go_doc/</guid><description>godoc コマンドを使ってドキュメントを読む方法についてまとめてみました</description></item></channel></rss>